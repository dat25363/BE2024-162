openapi: 3.0.0
info:
  title: Product Search API
  description: API for searching products based on various criteria.
  version: 1.0.0

servers:
  - url: http://localhost:3000

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/product-search:
    get:
      summary: Search for products
      description: Retrieve a list of products based on the provided search criteria.
      security:
        - BearerAuth: [] 
      parameters:
        - name: keyword
          in: query
          description: Keyword to search for in product names.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            example: 1
        - name: city
          in: query
          description: City to filter products.
          required: false
          schema:
            type: string
        - name: condition
          in: query
          description: Condition of the product (e.g., new, used).
          required: false
          schema:
            type: string
        - name: brand
          in: query
          description: Brand of the product.
          required: false
          schema:
            type: string
        - name: release_year_above
          in: query
          description: Filter products released on or after this year.
          required: false
          schema:
            type: integer
        - name: release_year_below
          in: query
          description: Filter products released on or before this year.
          required: false
          schema:
            type: integer
        - name: min_price
          in: query
          description: Filter products with a price equal or above this value.
          required: false
          schema:
            type: number
            format: float
        - name: max_price
          in: query
          description: Filter products with a price equal or below this value.
          required: false
          schema:
            type: number
            format: float
      responses:
        '200':
          description: A list of products matching the search filter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Total number of products found.
                  devices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Product ID
                        product_name:
                          type: string
                          description: Name of the product
                        city:
                          type: string
                          description: City where the product is located
                        p_condition:
                          type: string
                          description: Condition of the product
                        brand_name:
                          type: string
                          description: Brand name of the product
                        release_year:
                          type: integer
                          description: Release year of the product
                        price:
                          type: number
                          format: float
                          description: Price of the product
                        img:
                          type: string
                          description: URL of the product image
        '400':
          description: Bad request, invalid parameters.
        '401':
          description: Unauthorized, invalid token or no token provided.
        '403':
          description: Do not have permission.
        '500':
          description: Internal server error.

  /api/login:
    post:
      summary: User login
      description: Authenticate a user and retrieve a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: Phone number of the user.
                pass:
                  type: string
                  description: Password of the user.
              required:
                - phone
                - pass
      responses:
        '200':
          description: Login successful, returns a JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authenticated requests.
        '400':
          description: Bad request, invalid parameters.
        '401':
          description: Unauthorized, invalid phone or password.
        '500':
          description: Internal server error.

  /api/get-all-user:
    get:
      summary: Get a list of users
      description: Retrieve all registered users.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: User ID
                        phone:
                          type: string
                          description: User phone number
                        pass:
                          type: string
                          description: User password
                        userGroup_id:
                          type: integer
                          description: User group ID
        '400':
          description: Bad request, invalid parameters.
        '401':
          description: Unauthorized, invalid token or no token provided.
        '403':
          description: Do not have permission.
        '500':
          description: Internal server error.

  /api/add-user:
    post:
      summary: Add a new user
      description: Create a new user with the provided details.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: Phone number of the user.
                pass:
                  type: string
                  description: Password of the user.
                group:
                  type: string
                  description: user group.
              required:
                - phone
                - pass
                - group
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  phone:
                    type: string
                    description: Phone number of the user.
                  pass:
                    type: string
                    description: Password of the user.
                  group:
                    type: string
                    description: user group.
        '400':
          description: Bad request, invalid parameters.
        '401':
          description: Unauthorized, invalid token or no token provided.
        '403':
          description: Do not have permission.
        '500':
          description: Internal server error.

  /api/delete-user:
    delete:
      summary: Delete a user
      description: Remove a user based on the provided phone number.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: Phone number of the user to delete.
              required:
                - phone
      responses:
        '200':
          description: User deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  phone:
                    type: string
                    description: Phone number of the user.
                  pass:
                    type: string
                    description: Password of the user.
                  group:
                    type: string
                    description: user group.
        '400':
          description: Bad request, invalid parameters.
        '401':
          description: Unauthorized, invalid token or no token provided.
        '403':
          description: Do not have permission.
        '404':
          description: User not found.
        '500':
          description: Internal server error.
